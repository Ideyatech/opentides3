<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd">

	<bean id="authenticationService"
		class="org.opentides.persistence.user.MultitenantAuthenticationDaoJdbcImpl">
		<property name="dataSource">
			<ref bean="dataSource" />
		</property>
		<property name="usersByUsernameQuery">
			<value>SELECT username,password,enabled FROM USERS WHERE username=?
			</value>
		</property>
		<property name="authoritiesByUsernameQuery">
			<value>SELECT u.username,authority from USERS as u 
					inner join USER_GROUP g on u.userid=g.user_id 
					inner join USER_AUTHORITY a on g.group_id = a.usergroup_id
					where u.username=?</value>
		</property>
	</bean>
	
	<bean id="loginUrlAuthenticationEntryPoint" class="org.opentides.web.security.RequestParametersLoginUrlAuthenticationEntryPoint">
		<constructor-arg type="java.lang.String" value="/login" />
	</bean>
	
	<bean id="logoutHandler" class="org.opentides.web.security.MultitenantLogoutListener" autowire="byName">
		<property name="defaultTargetUrl" value="/login?login_error=logout" />
	</bean>
</beans>
