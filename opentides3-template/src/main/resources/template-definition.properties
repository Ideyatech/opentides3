# TEMPLATE-SOURCE
# Specify the folder of velocity templates that will be copied
# Format: TEMPLATE-SOURCE.<AnnotationClass>=<FolderLocation>
# where AnnotationClass - full className of the annotation to process
#       FolderLocation  - path where vm files will be processed. 
#                         use dot notation of subfolders (e.g.templates.opentides.dao)
TEMPLATE-SOURCE-BASE=templates.opentides
TEMPLATE-SOURCE.org.opentides.annotation.GenerateDao=templates.opentides.dao
TEMPLATE-SOURCE.org.opentides.annotation.GenerateService=templates.opentides.service
TEMPLATE-SOURCE.org.opentides.annotation.GenerateCrudController=templates.opentides.web

# PARAM-BUILDER
# Specify the method to build additional parameters that will be available for the
# velocity template. Note: this must refer to a method name that returns a 
# Map<String, Object> and accepts a "Class" parameter.
# Format: PARAM-BUILDER.<AnnotationClass>=<MethodName>
# where AnnotationClass - full className of the annotation to process
#       MethodName      - name of method that return additional parameter
# Example of method name should look like below:
# public Map<String, Object> buildWebParam(Class clazz) {
#     ...
# }
#
PARAM-BUILDER.org.opentides.annotation.GenerateCrudController=org.opentides.processor.param.ParamBuilder.buildWebParam
