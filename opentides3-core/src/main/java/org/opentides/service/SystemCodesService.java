/*
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.    
 */
package org.opentides.service;

import java.util.List;

import org.opentides.bean.SystemCodes;

/**
 * This is the service interface for {@link SystemCodes}. It extends
 * the {@link BaseCrudService }.
 * Scaffold generated by opentides3 on Jan 16, 2013 12:40:25. 
 * @author opentides
 */
 
public interface SystemCodesService extends BaseCrudService<SystemCodes> {
	/**
	 * Finds the system code with the given key set in the example bean
	 * {@code systemCodes}.
	 * 
	 * @param systemCodes
	 * @return the system code with the given key
	 */
	public SystemCodes findByKey(SystemCodes systemCodes);
	
	/**
	 * Finds the system code with the given {@code key}.
	 * 
	 * @param key
	 * @return the system code with the given key
	 */
	public SystemCodes findByKey(String key);
	
	/**
	 * Finds all the system codes with the given {@code category}.
	 * 
	 * @param category
	 * @return a list of system codes with the given category
	 */
	public List<SystemCodes> findSystemCodesByCategory(String category);
	
	/**
	 * Returns a list of the available categories of all system codes.
	 * @return a list of system codes categories
	 */
	public List<String> getAllCategories();
	
	/**
	 * Returns a list of the available categories of all system codes not
	 * included in the parameter {@code categories}.
	 * @param categories
	 * @return
	 */
	public List<String> getAllCategoriesExcept(String ... categories);
	
	/**
	 * Checks if a system codes ha a duplicate key.
	 * 
	 * @param systemCodes to search
	 * @return boolean indicated whether a system code has a duplicate or not
	 */
	public boolean isDuplicateKey(SystemCodes systemCodes);

}
