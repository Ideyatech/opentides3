/*
   Licensed to the Apache Software Foundation (ASF) under one
   or more contributor license agreements.  See the NOTICE file
   distributed with this work for additional information
   regarding copyright ownership.  The ASF licenses this file
   to you under the Apache License, Version 2.0 (the
   "License"); you may not use this file except in compliance
   with the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing,
   software distributed under the License is distributed on an
   "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
   KIND, either express or implied.  See the License for the
   specific language governing permissions and limitations
   under the License.    
 */
package org.opentides.web.controller;

import java.util.List;

import javax.annotation.PostConstruct;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.opentides.bean.SystemCodes;
import org.opentides.util.StringUtil;
import org.opentides.web.json.ResponseView;
import org.opentides.web.json.Views;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

/**
 * This is the controller class for {@link SystemCodes}. It extends the
 * {@link BaseCrudController} class. Mapped to {@code /system/system-codes}.
 * Scaffold generated by opentides3 on Jan 16, 2013 12:40:25. 
 * @author opentides
 */
@RequestMapping("/system/system-codes")
@Controller 
public class SystemCodesCrudController extends BaseCrudController<SystemCodes> {
	
	private static final Logger LOGGER = LoggerFactory.getLogger(SystemCodesCrudController.class);

	/**
	 * Post construct that initializes the crud page to {@code "/base/system-codes-crud"}.
	 */
	@PostConstruct
	public void init() {
		singlePage = "/base/system-codes-crud";
	}
	
	/**
	 * Method stub that returns a list of all categories for the system codes.
	 * 
	 * @return list of system codes
	 */
	@ModelAttribute("categoryList")
	public List<String> categoryList() {
		return systemCodesService.getAllCategories();
	}
	
	@Override
	protected void preCreate(SystemCodes command, BindingResult bindingResult,
			Model uiModel, HttpServletRequest request,
			HttpServletResponse response) {
		setParent(command);
	}
	
	@Override
	protected void preUpdate(SystemCodes command, BindingResult bindingResult,
			Model uiModel, HttpServletRequest request,
			HttpServletResponse response) {
		setParent(command);
	}
	
	private void setParent(SystemCodes command) {
		if(!StringUtil.isEmpty(command.getParentString())) {
			SystemCodes parent = systemCodesService.findByKey(command.getParentString());
			if(parent != null) {
				command.setParent(parent);
			}
		}
	}
	
	/**
	 * Find system codes by category
	 * 
	 * @param category the category to search
	 * @return
	 */
	@RequestMapping(value = "/findByCategory")
	@ResponseView(Views.SearchView.class)
	public @ResponseBody List<SystemCodes> findByCategory(@RequestParam("category") String category) {
		LOGGER.debug("Find System Codes for category {}", category);
		return systemCodesService.findSystemCodesByCategory(category);
	}
	
	/* (non-Javadoc)
	 * @see org.opentides.web.controller.BaseCrudController#onLoadSearch(org.opentides.bean.BaseEntity, org.springframework.validation.BindingResult, org.springframework.ui.Model, javax.servlet.http.HttpServletRequest, javax.servlet.http.HttpServletResponse)
	 */
	/**
	 * Method that adds to the model parameter {@code uiModel} the results {@code results} 
	 * of {@link BaseCrudController } search method.
	 */
	@Override
	protected void onLoadSearch(SystemCodes command, BindingResult bindingResult, 
			Model uiModel, HttpServletRequest request,
			HttpServletResponse response) {
		uiModel.addAttribute("results", search(command, request));
	}
}
