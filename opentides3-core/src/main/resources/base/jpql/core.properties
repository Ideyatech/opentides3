#===========USER
jpql.user.findByUsername=select u from BaseUser u where u.credential.username=:username
jpql.user.findByEmailAddress=select u from BaseUser u where u.emailAddress=:emailAddress
jpql.user.findByUsergroupName=select u from BaseUser u LEFT JOIN FETCH u.groups g where g.name= :name AND u.credential.enabled=true order by u.lastName, u.firstName
jpql.user.findUsersLikeLastName=select u from BaseUser u where u.lastName LIKE :name and u.credential.enabled=true ORDER BY u.lastName ASC
jpql.user.countByUsername=select count(u) from BaseUser u where u.credential.username=:username
jpql.user.countByEmailAddress=select count(u) from BaseUser u where u.emailAddress=:emailAddress
jpql.user.findByFacebookId=select u from BaseUser u where u.facebookId=:facebookId
jpql.user.findByGoogleId=select u from BaseUser u where u.googleId=:googleId
jpql.user.findByTwitterId=select u from BaseUser u where u.twitterId=:twitterId

#===========USERGROUP
jpql.usergroup.findByName=select u from UserGroup u where u.name = :name
jpql.usergroup.findOldDefault=select u from UserGroup u where u.isDefault = true and u.id not in (:groupIds)
jpql.usergroup.findDefault=select u from UserGroup u where u.isDefault = true

#===========AUDIT LOG
jpql.audit.findByReferenceAndClass=from AuditLog a where a.reference = :reference and a.entityClass in (:entityClass) order by createDate desc
jpql.audit.findLikeReferenceAndClass=from AuditLog a where (a.reference = :reference or a.reference like :likeReference) and a.entityClass in (:entityClass) order by createDate desc

#===========SYSTEMCODES
jpql.systemcodes.findAllCategories=select s.category from SystemCodes s where s.category is not null group by s.category order by s.category 
jpql.systemcodes.findByKey=select s from SystemCodes s WHERE s.key=:keyName
jpql.systemcodes.countDuplicate=select count(s) from SystemCodes s where s.key=:keyName and s.id != :id
jpql.systemcodes.findByCategory=select s from SystemCodes s WHERE s.category=:category order by s.value
jpql.systemcodes.findAllCategoriesExcept=select s from SystemCodes s where s.category is not null and not s.category in (:categories) group by s.category order by s.category

#===========TAG
jpql.tag.findByText=select t from Tag t where t.tagText=:text
jpql.tag.findByTaggableClassAndId=select t from Tag t where t.taggableClass = :taggableClass and t.taggableId = :taggableId
jpql.tag.findByTaggableClassIdTagTexts=select t from Tag t where t.taggableClass = :taggableClass and t.taggableId = :taggableId and t.tagText in (:tagTexts)

#===========SEQUENCE
jpql.sequence.findByKey=select s from Sequence s WHERE s.key=:keyName

#===========FILE INFO
jpql.fileInfo.findFileInfoByFullPath=select f from FileInfo f where f.fullPath = :path
jpql.fileInfo.findFileInfoByFileId=select f from FileInfo f where f.fileId = :fileId order by f.fileVersion DESC

#===========USER DEFINED FIELD
jpql.udf.findMetaByClass=from UserDefinedField f where f.clazz = :clazz order by order

#===========WIDGET
jpql.widget.findDefaultWidgets=from Widget w where w.accessCode in :roles and w.isShown = true
jpql.widget.findWidgetsWithAccessCode=from Widget w where w.accessCode in :roles
jpql.widget.deleteUserWidgetsByWidgetAndUser=delete from UserWidgets uw where uw.user.id = :userId and uw.widget.id = :widgetId
jpql.userwidgets.countUserWidgetsColumn=select count(i) from UserWidgets i WHERE i.user.id = :userId AND i.column= :column

#===========REPORT
jpql.report.findAllReportsOrderByReportGroup=from DynamicReport d order by d.reportGroup.value, d.orderNumber ASC, d.title ASC

#===========SOCIAL BASEUSER
jpql.socialBaseUser.findBySocialIdAndType=select sc.socialBaseUser from SocialCredential sc where sc.socialId = :socialId and sc.socialType = :type

#===========ACCOUNT TYPE (for multitenancy plugin)
jpql.accountType.findByName = from AccountType where name = :name

#===========TENANT (for multitenancy plugin)
jpql.tenant.findBySchema = from Tenant t where t.schema=:schema
jpql.tenant.findLikeCompany = from Tenant t where t.company like ?1
jpql.tenant.findSchemaName = select schema from Tenant t where company = :company